"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tailwind-merge@1.8.1";
exports.ids = ["vendor-chunks/tailwind-merge@1.8.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/tailwind-merge@1.8.1/node_modules/tailwind-merge/dist/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/tailwind-merge@1.8.1/node_modules/tailwind-merge/dist/index.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./tailwind-merge.cjs.development.js */ \"(ssr)/./node_modules/.pnpm/tailwind-merge@1.8.1/node_modules/tailwind-merge/dist/tailwind-merge.cjs.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vdGFpbHdpbmQtbWVyZ2VAMS44LjEvbm9kZV9tb2R1bGVzL3RhaWx3aW5kLW1lcmdlL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQ0E7QUFFQSxJQUFJQSxLQUF5QixFQUFjLEVBRTFDLE1BQU07SUFDTEMscU1BQXlCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWFzdGhhLW5leHQvLi9ub2RlX21vZHVsZXMvLnBucG0vdGFpbHdpbmQtbWVyZ2VAMS44LjEvbm9kZV9tb2R1bGVzL3RhaWx3aW5kLW1lcmdlL2Rpc3QvaW5kZXguanM/YWJlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbid1c2Ugc3RyaWN0J1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vdGFpbHdpbmQtbWVyZ2UuY2pzLnByb2R1Y3Rpb24ubWluLmpzJylcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi90YWlsd2luZC1tZXJnZS5janMuZGV2ZWxvcG1lbnQuanMnKVxufVxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/tailwind-merge@1.8.1/node_modules/tailwind-merge/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/tailwind-merge@1.8.1/node_modules/tailwind-merge/dist/tailwind-merge.cjs.development.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/tailwind-merge@1.8.1/node_modules/tailwind-merge/dist/tailwind-merge.cjs.development.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */ function twJoin() {\n    var index = 0;\n    var argument;\n    var resolvedValue;\n    var string = \"\";\n    while(index < arguments.length){\n        if (argument = arguments[index++]) {\n            if (resolvedValue = toValue(argument)) {\n                string && (string += \" \");\n                string += resolvedValue;\n            }\n        }\n    }\n    return string;\n}\nfunction toValue(mix) {\n    if (typeof mix === \"string\") {\n        return mix;\n    }\n    var resolvedValue;\n    var string = \"\";\n    for(var k = 0; k < mix.length; k++){\n        if (mix[k]) {\n            if (resolvedValue = toValue(mix[k])) {\n                string && (string += \" \");\n                string += resolvedValue;\n            }\n        }\n    }\n    return string;\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nvar CLASS_PART_SEPARATOR = \"-\";\nfunction createClassUtils(config) {\n    var classMap = createClassMap(config);\n    function getClassGroupId(className) {\n        var classParts = className.split(CLASS_PART_SEPARATOR); // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === \"\" && classParts.length !== 1) {\n            classParts.shift();\n        }\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n    }\n    function getConflictingClassGroupIds(classGroupId) {\n        return config.conflictingClassGroups[classGroupId] || [];\n    }\n    return {\n        getClassGroupId: getClassGroupId,\n        getConflictingClassGroupIds: getConflictingClassGroupIds\n    };\n}\nfunction getGroupRecursive(classParts, classPartObject) {\n    var _classPartObject$vali;\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId;\n    }\n    var currentClassPart = classParts[0];\n    var nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n    var classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart;\n    }\n    if (classPartObject.validators.length === 0) {\n        return undefined;\n    }\n    var classRest = classParts.join(CLASS_PART_SEPARATOR);\n    return (_classPartObject$vali = classPartObject.validators.find(function(_ref) {\n        var validator = _ref.validator;\n        return validator(classRest);\n    })) == null ? void 0 : _classPartObject$vali.classGroupId;\n}\nvar arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nfunction getGroupIdForArbitraryProperty(className) {\n    if (arbitraryPropertyRegex.test(className)) {\n        var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n        var property = arbitraryPropertyClassName == null ? void 0 : arbitraryPropertyClassName.substring(0, arbitraryPropertyClassName.indexOf(\":\"));\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return \"arbitrary..\" + property;\n        }\n    }\n}\n/**\r\n * Exported for testing only\r\n */ function createClassMap(config) {\n    var theme = config.theme, prefix = config.prefix;\n    var classMap = {\n        nextPart: new Map(),\n        validators: []\n    };\n    var prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n    prefixedClassGroupEntries.forEach(function(_ref2) {\n        var classGroupId = _ref2[0], classGroup = _ref2[1];\n        processClassesRecursively(classGroup, classMap, classGroupId, theme);\n    });\n    return classMap;\n}\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n    classGroup.forEach(function(classDefinition) {\n        if (typeof classDefinition === \"string\") {\n            var classPartObjectToEdit = classDefinition === \"\" ? classPartObject : getPart(classPartObject, classDefinition);\n            classPartObjectToEdit.classGroupId = classGroupId;\n            return;\n        }\n        if (typeof classDefinition === \"function\") {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n                return;\n            }\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId: classGroupId\n            });\n            return;\n        }\n        Object.entries(classDefinition).forEach(function(_ref3) {\n            var key = _ref3[0], classGroup = _ref3[1];\n            processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n        });\n    });\n}\nfunction getPart(classPartObject, path) {\n    var currentClassPartObject = classPartObject;\n    path.split(CLASS_PART_SEPARATOR).forEach(function(pathPart) {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: []\n            });\n        }\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n    });\n    return currentClassPartObject;\n}\nfunction isThemeGetter(func) {\n    return func.isThemeGetter;\n}\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n    if (!prefix) {\n        return classGroupEntries;\n    }\n    return classGroupEntries.map(function(_ref4) {\n        var classGroupId = _ref4[0], classGroup = _ref4[1];\n        var prefixedClassGroup = classGroup.map(function(classDefinition) {\n            if (typeof classDefinition === \"string\") {\n                return prefix + classDefinition;\n            }\n            if (typeof classDefinition === \"object\") {\n                return Object.fromEntries(Object.entries(classDefinition).map(function(_ref5) {\n                    var key = _ref5[0], value = _ref5[1];\n                    return [\n                        prefix + key,\n                        value\n                    ];\n                }));\n            }\n            return classDefinition;\n        });\n        return [\n            classGroupId,\n            prefixedClassGroup\n        ];\n    });\n}\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nfunction createLruCache(maxCacheSize) {\n    if (maxCacheSize < 1) {\n        return {\n            get: function get() {\n                return undefined;\n            },\n            set: function set() {}\n        };\n    }\n    var cacheSize = 0;\n    var cache = new Map();\n    var previousCache = new Map();\n    function update(key, value) {\n        cache.set(key, value);\n        cacheSize++;\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0;\n            previousCache = cache;\n            cache = new Map();\n        }\n    }\n    return {\n        get: function get(key) {\n            var value = cache.get(key);\n            if (value !== undefined) {\n                return value;\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value);\n                return value;\n            }\n        },\n        set: function set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value);\n            } else {\n                update(key, value);\n            }\n        }\n    };\n}\nvar IMPORTANT_MODIFIER = \"!\";\nfunction createSplitModifiers(config) {\n    var separator = config.separator || \":\"; // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n    return function splitModifiers(className) {\n        var bracketDepth = 0;\n        var modifiers = [];\n        var modifierStart = 0;\n        for(var index = 0; index < className.length; index++){\n            var _char = className[index];\n            if (bracketDepth === 0 && _char === separator[0]) {\n                if (separator.length === 1 || className.slice(index, index + separator.length) === separator) {\n                    modifiers.push(className.slice(modifierStart, index));\n                    modifierStart = index + separator.length;\n                }\n            }\n            if (_char === \"[\") {\n                bracketDepth++;\n            } else if (_char === \"]\") {\n                bracketDepth--;\n            }\n        }\n        var baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n        var hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n        var baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n        return {\n            modifiers: modifiers,\n            hasImportantModifier: hasImportantModifier,\n            baseClassName: baseClassName\n        };\n    };\n}\n/**\r\n * Sorts modifiers according to following schema:\r\n * - Predefined modifiers are sorted alphabetically\r\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\r\n */ function sortModifiers(modifiers) {\n    if (modifiers.length <= 1) {\n        return modifiers;\n    }\n    var sortedModifiers = [];\n    var unsortedModifiers = [];\n    modifiers.forEach(function(modifier) {\n        var isArbitraryVariant = modifier[0] === \"[\";\n        if (isArbitraryVariant) {\n            sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort().concat([\n                modifier\n            ]));\n            unsortedModifiers = [];\n        } else {\n            unsortedModifiers.push(modifier);\n        }\n    });\n    sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort());\n    return sortedModifiers;\n}\nfunction createConfigUtils(config) {\n    return _extends({\n        cache: createLruCache(config.cacheSize),\n        splitModifiers: createSplitModifiers(config)\n    }, createClassUtils(config));\n}\nvar SPLIT_CLASSES_REGEX = /\\s+/;\nfunction mergeClassList(classList, configUtils) {\n    var splitModifiers = configUtils.splitModifiers, getClassGroupId = configUtils.getClassGroupId, getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds;\n    /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example 'md:!pr'\r\n   */ var classGroupsInConflict = new Set();\n    return classList.trim().split(SPLIT_CLASSES_REGEX).map(function(originalClassName) {\n        var _splitModifiers = splitModifiers(originalClassName), modifiers = _splitModifiers.modifiers, hasImportantModifier = _splitModifiers.hasImportantModifier, baseClassName = _splitModifiers.baseClassName;\n        var classGroupId = getClassGroupId(baseClassName);\n        if (!classGroupId) {\n            return {\n                isTailwindClass: false,\n                originalClassName: originalClassName\n            };\n        }\n        var variantModifier = sortModifiers(modifiers).join(\":\");\n        var modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n        return {\n            isTailwindClass: true,\n            modifierId: modifierId,\n            classGroupId: classGroupId,\n            originalClassName: originalClassName\n        };\n    }).reverse() // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n    .filter(function(parsed) {\n        if (!parsed.isTailwindClass) {\n            return true;\n        }\n        var modifierId = parsed.modifierId, classGroupId = parsed.classGroupId;\n        var classId = modifierId + classGroupId;\n        if (classGroupsInConflict.has(classId)) {\n            return false;\n        }\n        classGroupsInConflict.add(classId);\n        getConflictingClassGroupIds(classGroupId).forEach(function(group) {\n            return classGroupsInConflict.add(modifierId + group);\n        });\n        return true;\n    }).reverse().map(function(parsed) {\n        return parsed.originalClassName;\n    }).join(\" \");\n}\nfunction createTailwindMerge() {\n    for(var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++){\n        createConfig[_key] = arguments[_key];\n    }\n    var configUtils;\n    var cacheGet;\n    var cacheSet;\n    var functionToCall = initTailwindMerge;\n    function initTailwindMerge(classList) {\n        var firstCreateConfig = createConfig[0], restCreateConfig = createConfig.slice(1);\n        var config = restCreateConfig.reduce(function(previousConfig, createConfigCurrent) {\n            return createConfigCurrent(previousConfig);\n        }, firstCreateConfig());\n        configUtils = createConfigUtils(config);\n        cacheGet = configUtils.cache.get;\n        cacheSet = configUtils.cache.set;\n        functionToCall = tailwindMerge;\n        return tailwindMerge(classList);\n    }\n    function tailwindMerge(classList) {\n        var cachedResult = cacheGet(classList);\n        if (cachedResult) {\n            return cachedResult;\n        }\n        var result = mergeClassList(classList, configUtils);\n        cacheSet(classList, result);\n        return result;\n    }\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments));\n    };\n}\nfunction fromTheme(key) {\n    var themeGetter = function themeGetter(theme) {\n        return theme[key] || [];\n    };\n    themeGetter.isThemeGetter = true;\n    return themeGetter;\n}\nvar arbitraryValueRegex = /^\\[(.+)\\]$/;\nvar fractionRegex = /^\\d+\\/\\d+$/;\nvar stringLengths = /*#__PURE__*/ new Set([\n    \"px\",\n    \"full\",\n    \"screen\"\n]);\nvar tshirtUnitRegex = /^(\\d+)?(xs|sm|md|lg|xl)$/;\nvar lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh)/; // Shadow always begins with x and y offset separated by underscore\nvar shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nfunction isLength(classPart) {\n    return !Number.isNaN(Number(classPart)) || stringLengths.has(classPart) || fractionRegex.test(classPart) || isArbitraryLength(classPart);\n}\nfunction isArbitraryLength(classPart) {\n    var _arbitraryValueRegex$;\n    var arbitraryValue = (_arbitraryValueRegex$ = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$[1];\n    if (arbitraryValue) {\n        return arbitraryValue.startsWith(\"length:\") || lengthUnitRegex.test(arbitraryValue);\n    }\n    return false;\n}\nfunction isArbitrarySize(classPart) {\n    var _arbitraryValueRegex$2;\n    var arbitraryValue = (_arbitraryValueRegex$2 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$2[1];\n    return arbitraryValue ? arbitraryValue.startsWith(\"size:\") : false;\n}\nfunction isArbitraryPosition(classPart) {\n    var _arbitraryValueRegex$3;\n    var arbitraryValue = (_arbitraryValueRegex$3 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$3[1];\n    return arbitraryValue ? arbitraryValue.startsWith(\"position:\") : false;\n}\nfunction isArbitraryUrl(classPart) {\n    var _arbitraryValueRegex$4;\n    var arbitraryValue = (_arbitraryValueRegex$4 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$4[1];\n    return arbitraryValue ? arbitraryValue.startsWith(\"url(\") || arbitraryValue.startsWith(\"url:\") : false;\n}\nfunction isArbitraryNumber(classPart) {\n    var _arbitraryValueRegex$5;\n    var arbitraryValue = (_arbitraryValueRegex$5 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$5[1];\n    return arbitraryValue ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith(\"number:\") : false;\n}\n/**\r\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\r\n */ var isArbitraryWeight = isArbitraryNumber;\nfunction isInteger(classPart) {\n    var _arbitraryValueRegex$6;\n    var arbitraryValue = (_arbitraryValueRegex$6 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$6[1];\n    if (arbitraryValue) {\n        return Number.isInteger(Number(arbitraryValue));\n    }\n    return Number.isInteger(Number(classPart));\n}\nfunction isArbitraryValue(classPart) {\n    return arbitraryValueRegex.test(classPart);\n}\nfunction isAny() {\n    return true;\n}\nfunction isTshirtSize(classPart) {\n    return tshirtUnitRegex.test(classPart);\n}\nfunction isArbitraryShadow(classPart) {\n    var _arbitraryValueRegex$7;\n    var arbitraryValue = (_arbitraryValueRegex$7 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$7[1];\n    if (arbitraryValue) {\n        return shadowRegex.test(arbitraryValue);\n    }\n    return false;\n}\nvar validators = {\n    __proto__: null,\n    isLength: isLength,\n    isArbitraryLength: isArbitraryLength,\n    isArbitrarySize: isArbitrarySize,\n    isArbitraryPosition: isArbitraryPosition,\n    isArbitraryUrl: isArbitraryUrl,\n    isArbitraryNumber: isArbitraryNumber,\n    isArbitraryWeight: isArbitraryWeight,\n    isInteger: isInteger,\n    isArbitraryValue: isArbitraryValue,\n    isAny: isAny,\n    isTshirtSize: isTshirtSize,\n    isArbitraryShadow: isArbitraryShadow\n};\nfunction getDefaultConfig() {\n    var colors = fromTheme(\"colors\");\n    var spacing = fromTheme(\"spacing\");\n    var blur = fromTheme(\"blur\");\n    var brightness = fromTheme(\"brightness\");\n    var borderColor = fromTheme(\"borderColor\");\n    var borderRadius = fromTheme(\"borderRadius\");\n    var borderSpacing = fromTheme(\"borderSpacing\");\n    var borderWidth = fromTheme(\"borderWidth\");\n    var contrast = fromTheme(\"contrast\");\n    var grayscale = fromTheme(\"grayscale\");\n    var hueRotate = fromTheme(\"hueRotate\");\n    var invert = fromTheme(\"invert\");\n    var gap = fromTheme(\"gap\");\n    var gradientColorStops = fromTheme(\"gradientColorStops\");\n    var inset = fromTheme(\"inset\");\n    var margin = fromTheme(\"margin\");\n    var opacity = fromTheme(\"opacity\");\n    var padding = fromTheme(\"padding\");\n    var saturate = fromTheme(\"saturate\");\n    var scale = fromTheme(\"scale\");\n    var sepia = fromTheme(\"sepia\");\n    var skew = fromTheme(\"skew\");\n    var space = fromTheme(\"space\");\n    var translate = fromTheme(\"translate\");\n    var getOverscroll = function getOverscroll() {\n        return [\n            \"auto\",\n            \"contain\",\n            \"none\"\n        ];\n    };\n    var getOverflow = function getOverflow() {\n        return [\n            \"auto\",\n            \"hidden\",\n            \"clip\",\n            \"visible\",\n            \"scroll\"\n        ];\n    };\n    var getSpacingWithAuto = function getSpacingWithAuto() {\n        return [\n            \"auto\",\n            spacing\n        ];\n    };\n    var getLengthWithEmpty = function getLengthWithEmpty() {\n        return [\n            \"\",\n            isLength\n        ];\n    };\n    var getIntegerWithAuto = function getIntegerWithAuto() {\n        return [\n            \"auto\",\n            isInteger\n        ];\n    };\n    var getPositions = function getPositions() {\n        return [\n            \"bottom\",\n            \"center\",\n            \"left\",\n            \"left-bottom\",\n            \"left-top\",\n            \"right\",\n            \"right-bottom\",\n            \"right-top\",\n            \"top\"\n        ];\n    };\n    var getLineStyles = function getLineStyles() {\n        return [\n            \"solid\",\n            \"dashed\",\n            \"dotted\",\n            \"double\",\n            \"none\"\n        ];\n    };\n    var getBlendModes = function getBlendModes() {\n        return [\n            \"normal\",\n            \"multiply\",\n            \"screen\",\n            \"overlay\",\n            \"darken\",\n            \"lighten\",\n            \"color-dodge\",\n            \"color-burn\",\n            \"hard-light\",\n            \"soft-light\",\n            \"difference\",\n            \"exclusion\",\n            \"hue\",\n            \"saturation\",\n            \"color\",\n            \"luminosity\",\n            \"plus-lighter\"\n        ];\n    };\n    var getAlign = function getAlign() {\n        return [\n            \"start\",\n            \"end\",\n            \"center\",\n            \"between\",\n            \"around\",\n            \"evenly\"\n        ];\n    };\n    var getZeroAndEmpty = function getZeroAndEmpty() {\n        return [\n            \"\",\n            \"0\",\n            isArbitraryValue\n        ];\n    };\n    var getBreaks = function getBreaks() {\n        return [\n            \"auto\",\n            \"avoid\",\n            \"all\",\n            \"avoid-page\",\n            \"page\",\n            \"left\",\n            \"right\",\n            \"column\"\n        ];\n    };\n    return {\n        cacheSize: 500,\n        theme: {\n            colors: [\n                isAny\n            ],\n            spacing: [\n                isLength\n            ],\n            blur: [\n                \"none\",\n                \"\",\n                isTshirtSize,\n                isArbitraryLength\n            ],\n            brightness: [\n                isInteger\n            ],\n            borderColor: [\n                colors\n            ],\n            borderRadius: [\n                \"none\",\n                \"\",\n                \"full\",\n                isTshirtSize,\n                isArbitraryLength\n            ],\n            borderSpacing: [\n                spacing\n            ],\n            borderWidth: getLengthWithEmpty(),\n            contrast: [\n                isInteger\n            ],\n            grayscale: getZeroAndEmpty(),\n            hueRotate: [\n                isInteger\n            ],\n            invert: getZeroAndEmpty(),\n            gap: [\n                spacing\n            ],\n            gradientColorStops: [\n                colors\n            ],\n            inset: getSpacingWithAuto(),\n            margin: getSpacingWithAuto(),\n            opacity: [\n                isInteger\n            ],\n            padding: [\n                spacing\n            ],\n            saturate: [\n                isInteger\n            ],\n            scale: [\n                isInteger\n            ],\n            sepia: getZeroAndEmpty(),\n            skew: [\n                isInteger,\n                isArbitraryValue\n            ],\n            space: [\n                spacing\n            ],\n            translate: [\n                spacing\n            ]\n        },\n        classGroups: {\n            // Layout\n            /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */ aspect: [\n                {\n                    aspect: [\n                        \"auto\",\n                        \"square\",\n                        \"video\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       */ container: [\n                \"container\"\n            ],\n            /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */ columns: [\n                {\n                    columns: [\n                        isTshirtSize\n                    ]\n                }\n            ],\n            /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */ \"break-after\": [\n                {\n                    \"break-after\": getBreaks()\n                }\n            ],\n            /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */ \"break-before\": [\n                {\n                    \"break-before\": getBreaks()\n                }\n            ],\n            /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */ \"break-inside\": [\n                {\n                    \"break-inside\": [\n                        \"auto\",\n                        \"avoid\",\n                        \"avoid-page\",\n                        \"avoid-column\"\n                    ]\n                }\n            ],\n            /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */ \"box-decoration\": [\n                {\n                    \"box-decoration\": [\n                        \"slice\",\n                        \"clone\"\n                    ]\n                }\n            ],\n            /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */ box: [\n                {\n                    box: [\n                        \"border\",\n                        \"content\"\n                    ]\n                }\n            ],\n            /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */ display: [\n                \"block\",\n                \"inline-block\",\n                \"inline\",\n                \"flex\",\n                \"inline-flex\",\n                \"table\",\n                \"inline-table\",\n                \"table-caption\",\n                \"table-cell\",\n                \"table-column\",\n                \"table-column-group\",\n                \"table-footer-group\",\n                \"table-header-group\",\n                \"table-row-group\",\n                \"table-row\",\n                \"flow-root\",\n                \"grid\",\n                \"inline-grid\",\n                \"contents\",\n                \"list-item\",\n                \"hidden\"\n            ],\n            /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */ \"float\": [\n                {\n                    \"float\": [\n                        \"right\",\n                        \"left\",\n                        \"none\"\n                    ]\n                }\n            ],\n            /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */ clear: [\n                {\n                    clear: [\n                        \"left\",\n                        \"right\",\n                        \"both\",\n                        \"none\"\n                    ]\n                }\n            ],\n            /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */ isolation: [\n                \"isolate\",\n                \"isolation-auto\"\n            ],\n            /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */ \"object-fit\": [\n                {\n                    object: [\n                        \"contain\",\n                        \"cover\",\n                        \"fill\",\n                        \"none\",\n                        \"scale-down\"\n                    ]\n                }\n            ],\n            /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */ \"object-position\": [\n                {\n                    object: [].concat(getPositions(), [\n                        isArbitraryValue\n                    ])\n                }\n            ],\n            /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */ overflow: [\n                {\n                    overflow: getOverflow()\n                }\n            ],\n            /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */ \"overflow-x\": [\n                {\n                    \"overflow-x\": getOverflow()\n                }\n            ],\n            /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */ \"overflow-y\": [\n                {\n                    \"overflow-y\": getOverflow()\n                }\n            ],\n            /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */ overscroll: [\n                {\n                    overscroll: getOverscroll()\n                }\n            ],\n            /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */ \"overscroll-x\": [\n                {\n                    \"overscroll-x\": getOverscroll()\n                }\n            ],\n            /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */ \"overscroll-y\": [\n                {\n                    \"overscroll-y\": getOverscroll()\n                }\n            ],\n            /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */ position: [\n                \"static\",\n                \"fixed\",\n                \"absolute\",\n                \"relative\",\n                \"sticky\"\n            ],\n            /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */ inset: [\n                {\n                    inset: [\n                        inset\n                    ]\n                }\n            ],\n            /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */ \"inset-x\": [\n                {\n                    \"inset-x\": [\n                        inset\n                    ]\n                }\n            ],\n            /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */ \"inset-y\": [\n                {\n                    \"inset-y\": [\n                        inset\n                    ]\n                }\n            ],\n            /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */ top: [\n                {\n                    top: [\n                        inset\n                    ]\n                }\n            ],\n            /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */ right: [\n                {\n                    right: [\n                        inset\n                    ]\n                }\n            ],\n            /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */ bottom: [\n                {\n                    bottom: [\n                        inset\n                    ]\n                }\n            ],\n            /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */ left: [\n                {\n                    left: [\n                        inset\n                    ]\n                }\n            ],\n            /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */ visibility: [\n                \"visible\",\n                \"invisible\",\n                \"collapse\"\n            ],\n            /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */ z: [\n                {\n                    z: [\n                        isInteger\n                    ]\n                }\n            ],\n            // Flexbox and Grid\n            /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */ basis: [\n                {\n                    basis: [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */ \"flex-direction\": [\n                {\n                    flex: [\n                        \"row\",\n                        \"row-reverse\",\n                        \"col\",\n                        \"col-reverse\"\n                    ]\n                }\n            ],\n            /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */ \"flex-wrap\": [\n                {\n                    flex: [\n                        \"wrap\",\n                        \"wrap-reverse\",\n                        \"nowrap\"\n                    ]\n                }\n            ],\n            /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */ flex: [\n                {\n                    flex: [\n                        \"1\",\n                        \"auto\",\n                        \"initial\",\n                        \"none\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */ grow: [\n                {\n                    grow: getZeroAndEmpty()\n                }\n            ],\n            /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */ shrink: [\n                {\n                    shrink: getZeroAndEmpty()\n                }\n            ],\n            /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */ order: [\n                {\n                    order: [\n                        \"first\",\n                        \"last\",\n                        \"none\",\n                        isInteger\n                    ]\n                }\n            ],\n            /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */ \"grid-cols\": [\n                {\n                    \"grid-cols\": [\n                        isAny\n                    ]\n                }\n            ],\n            /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */ \"col-start-end\": [\n                {\n                    col: [\n                        \"auto\",\n                        {\n                            span: [\n                                isInteger\n                            ]\n                        }\n                    ]\n                }\n            ],\n            /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */ \"col-start\": [\n                {\n                    \"col-start\": getIntegerWithAuto()\n                }\n            ],\n            /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */ \"col-end\": [\n                {\n                    \"col-end\": getIntegerWithAuto()\n                }\n            ],\n            /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */ \"grid-rows\": [\n                {\n                    \"grid-rows\": [\n                        isAny\n                    ]\n                }\n            ],\n            /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */ \"row-start-end\": [\n                {\n                    row: [\n                        \"auto\",\n                        {\n                            span: [\n                                isInteger\n                            ]\n                        }\n                    ]\n                }\n            ],\n            /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */ \"row-start\": [\n                {\n                    \"row-start\": getIntegerWithAuto()\n                }\n            ],\n            /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */ \"row-end\": [\n                {\n                    \"row-end\": getIntegerWithAuto()\n                }\n            ],\n            /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */ \"grid-flow\": [\n                {\n                    \"grid-flow\": [\n                        \"row\",\n                        \"col\",\n                        \"dense\",\n                        \"row-dense\",\n                        \"col-dense\"\n                    ]\n                }\n            ],\n            /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */ \"auto-cols\": [\n                {\n                    \"auto-cols\": [\n                        \"auto\",\n                        \"min\",\n                        \"max\",\n                        \"fr\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */ \"auto-rows\": [\n                {\n                    \"auto-rows\": [\n                        \"auto\",\n                        \"min\",\n                        \"max\",\n                        \"fr\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */ gap: [\n                {\n                    gap: [\n                        gap\n                    ]\n                }\n            ],\n            /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */ \"gap-x\": [\n                {\n                    \"gap-x\": [\n                        gap\n                    ]\n                }\n            ],\n            /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */ \"gap-y\": [\n                {\n                    \"gap-y\": [\n                        gap\n                    ]\n                }\n            ],\n            /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */ \"justify-content\": [\n                {\n                    justify: getAlign()\n                }\n            ],\n            /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */ \"justify-items\": [\n                {\n                    \"justify-items\": [\n                        \"start\",\n                        \"end\",\n                        \"center\",\n                        \"stretch\"\n                    ]\n                }\n            ],\n            /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */ \"justify-self\": [\n                {\n                    \"justify-self\": [\n                        \"auto\",\n                        \"start\",\n                        \"end\",\n                        \"center\",\n                        \"stretch\"\n                    ]\n                }\n            ],\n            /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */ \"align-content\": [\n                {\n                    content: [].concat(getAlign(), [\n                        \"baseline\"\n                    ])\n                }\n            ],\n            /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */ \"align-items\": [\n                {\n                    items: [\n                        \"start\",\n                        \"end\",\n                        \"center\",\n                        \"baseline\",\n                        \"stretch\"\n                    ]\n                }\n            ],\n            /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */ \"align-self\": [\n                {\n                    self: [\n                        \"auto\",\n                        \"start\",\n                        \"end\",\n                        \"center\",\n                        \"stretch\",\n                        \"baseline\"\n                    ]\n                }\n            ],\n            /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */ \"place-content\": [\n                {\n                    \"place-content\": [].concat(getAlign(), [\n                        \"baseline\",\n                        \"stretch\"\n                    ])\n                }\n            ],\n            /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */ \"place-items\": [\n                {\n                    \"place-items\": [\n                        \"start\",\n                        \"end\",\n                        \"center\",\n                        \"baseline\",\n                        \"stretch\"\n                    ]\n                }\n            ],\n            /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */ \"place-self\": [\n                {\n                    \"place-self\": [\n                        \"auto\",\n                        \"start\",\n                        \"end\",\n                        \"center\",\n                        \"stretch\"\n                    ]\n                }\n            ],\n            // Spacing\n            /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */ p: [\n                {\n                    p: [\n                        padding\n                    ]\n                }\n            ],\n            /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */ px: [\n                {\n                    px: [\n                        padding\n                    ]\n                }\n            ],\n            /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */ py: [\n                {\n                    py: [\n                        padding\n                    ]\n                }\n            ],\n            /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */ pt: [\n                {\n                    pt: [\n                        padding\n                    ]\n                }\n            ],\n            /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */ pr: [\n                {\n                    pr: [\n                        padding\n                    ]\n                }\n            ],\n            /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */ pb: [\n                {\n                    pb: [\n                        padding\n                    ]\n                }\n            ],\n            /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */ pl: [\n                {\n                    pl: [\n                        padding\n                    ]\n                }\n            ],\n            /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */ m: [\n                {\n                    m: [\n                        margin\n                    ]\n                }\n            ],\n            /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */ mx: [\n                {\n                    mx: [\n                        margin\n                    ]\n                }\n            ],\n            /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */ my: [\n                {\n                    my: [\n                        margin\n                    ]\n                }\n            ],\n            /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */ mt: [\n                {\n                    mt: [\n                        margin\n                    ]\n                }\n            ],\n            /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */ mr: [\n                {\n                    mr: [\n                        margin\n                    ]\n                }\n            ],\n            /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */ mb: [\n                {\n                    mb: [\n                        margin\n                    ]\n                }\n            ],\n            /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */ ml: [\n                {\n                    ml: [\n                        margin\n                    ]\n                }\n            ],\n            /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/space\r\n       */ \"space-x\": [\n                {\n                    \"space-x\": [\n                        space\n                    ]\n                }\n            ],\n            /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */ \"space-x-reverse\": [\n                \"space-x-reverse\"\n            ],\n            /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/space\r\n       */ \"space-y\": [\n                {\n                    \"space-y\": [\n                        space\n                    ]\n                }\n            ],\n            /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */ \"space-y-reverse\": [\n                \"space-y-reverse\"\n            ],\n            // Sizing\n            /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */ w: [\n                {\n                    w: [\n                        \"auto\",\n                        \"min\",\n                        \"max\",\n                        \"fit\",\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */ \"min-w\": [\n                {\n                    \"min-w\": [\n                        \"min\",\n                        \"max\",\n                        \"fit\",\n                        isLength\n                    ]\n                }\n            ],\n            /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */ \"max-w\": [\n                {\n                    \"max-w\": [\n                        \"0\",\n                        \"none\",\n                        \"full\",\n                        \"min\",\n                        \"max\",\n                        \"fit\",\n                        \"prose\",\n                        {\n                            screen: [\n                                isTshirtSize\n                            ]\n                        },\n                        isTshirtSize,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */ h: [\n                {\n                    h: [\n                        spacing,\n                        \"auto\",\n                        \"min\",\n                        \"max\",\n                        \"fit\"\n                    ]\n                }\n            ],\n            /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */ \"min-h\": [\n                {\n                    \"min-h\": [\n                        \"min\",\n                        \"max\",\n                        \"fit\",\n                        isLength\n                    ]\n                }\n            ],\n            /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */ \"max-h\": [\n                {\n                    \"max-h\": [\n                        spacing,\n                        \"min\",\n                        \"max\",\n                        \"fit\"\n                    ]\n                }\n            ],\n            // Typography\n            /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */ \"font-size\": [\n                {\n                    text: [\n                        \"base\",\n                        isTshirtSize,\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */ \"font-smoothing\": [\n                \"antialiased\",\n                \"subpixel-antialiased\"\n            ],\n            /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */ \"font-style\": [\n                \"italic\",\n                \"not-italic\"\n            ],\n            /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */ \"font-weight\": [\n                {\n                    font: [\n                        \"thin\",\n                        \"extralight\",\n                        \"light\",\n                        \"normal\",\n                        \"medium\",\n                        \"semibold\",\n                        \"bold\",\n                        \"extrabold\",\n                        \"black\",\n                        isArbitraryNumber\n                    ]\n                }\n            ],\n            /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */ \"font-family\": [\n                {\n                    font: [\n                        isAny\n                    ]\n                }\n            ],\n            /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */ \"fvn-normal\": [\n                \"normal-nums\"\n            ],\n            /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */ \"fvn-ordinal\": [\n                \"ordinal\"\n            ],\n            /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */ \"fvn-slashed-zero\": [\n                \"slashed-zero\"\n            ],\n            /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */ \"fvn-figure\": [\n                \"lining-nums\",\n                \"oldstyle-nums\"\n            ],\n            /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */ \"fvn-spacing\": [\n                \"proportional-nums\",\n                \"tabular-nums\"\n            ],\n            /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */ \"fvn-fraction\": [\n                \"diagonal-fractions\",\n                \"stacked-fractons\"\n            ],\n            /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */ tracking: [\n                {\n                    tracking: [\n                        \"tighter\",\n                        \"tight\",\n                        \"normal\",\n                        \"wide\",\n                        \"wider\",\n                        \"widest\",\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */ leading: [\n                {\n                    leading: [\n                        \"none\",\n                        \"tight\",\n                        \"snug\",\n                        \"normal\",\n                        \"relaxed\",\n                        \"loose\",\n                        isLength\n                    ]\n                }\n            ],\n            /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */ \"list-style-type\": [\n                {\n                    list: [\n                        \"none\",\n                        \"disc\",\n                        \"decimal\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */ \"list-style-position\": [\n                {\n                    list: [\n                        \"inside\",\n                        \"outside\"\n                    ]\n                }\n            ],\n            /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/placeholder-color\r\n       */ \"placeholder-color\": [\n                {\n                    placeholder: [\n                        colors\n                    ]\n                }\n            ],\n            /**\r\n       * Placeholder Opacity\r\n       * @see https://tailwindcss.com/docs/placeholder-opacity\r\n       */ \"placeholder-opacity\": [\n                {\n                    \"placeholder-opacity\": [\n                        opacity\n                    ]\n                }\n            ],\n            /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */ \"text-alignment\": [\n                {\n                    text: [\n                        \"left\",\n                        \"center\",\n                        \"right\",\n                        \"justify\",\n                        \"start\",\n                        \"end\"\n                    ]\n                }\n            ],\n            /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */ \"text-color\": [\n                {\n                    text: [\n                        colors\n                    ]\n                }\n            ],\n            /**\r\n       * Text Opacity\r\n       * @see https://tailwindcss.com/docs/text-opacity\r\n       */ \"text-opacity\": [\n                {\n                    \"text-opacity\": [\n                        opacity\n                    ]\n                }\n            ],\n            /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */ \"text-decoration\": [\n                \"underline\",\n                \"overline\",\n                \"line-through\",\n                \"no-underline\"\n            ],\n            /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */ \"text-decoration-style\": [\n                {\n                    decoration: [].concat(getLineStyles(), [\n                        \"wavy\"\n                    ])\n                }\n            ],\n            /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */ \"text-decoration-thickness\": [\n                {\n                    decoration: [\n                        \"auto\",\n                        \"from-font\",\n                        isLength\n                    ]\n                }\n            ],\n            /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */ \"underline-offset\": [\n                {\n                    \"underline-offset\": [\n                        \"auto\",\n                        isLength\n                    ]\n                }\n            ],\n            /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */ \"text-decoration-color\": [\n                {\n                    decoration: [\n                        colors\n                    ]\n                }\n            ],\n            /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */ \"text-transform\": [\n                \"uppercase\",\n                \"lowercase\",\n                \"capitalize\",\n                \"normal-case\"\n            ],\n            /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */ \"text-overflow\": [\n                \"truncate\",\n                \"text-ellipsis\",\n                \"text-clip\"\n            ],\n            /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */ indent: [\n                {\n                    indent: [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */ \"vertical-align\": [\n                {\n                    align: [\n                        \"baseline\",\n                        \"top\",\n                        \"middle\",\n                        \"bottom\",\n                        \"text-top\",\n                        \"text-bottom\",\n                        \"sub\",\n                        \"super\",\n                        isArbitraryLength\n                    ]\n                }\n            ],\n            /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */ whitespace: [\n                {\n                    whitespace: [\n                        \"normal\",\n                        \"nowrap\",\n                        \"pre\",\n                        \"pre-line\",\n                        \"pre-wrap\"\n                    ]\n                }\n            ],\n            /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */ \"break\": [\n                {\n                    \"break\": [\n                        \"normal\",\n                        \"words\",\n                        \"all\",\n                        \"keep\"\n                    ]\n                }\n            ],\n            /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */ content: [\n                {\n                    content: [\n                        \"none\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // Backgrounds\n            /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */ \"bg-attachment\": [\n                {\n                    bg: [\n                        \"fixed\",\n                        \"local\",\n                        \"scroll\"\n                    ]\n                }\n            ],\n            /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */ \"bg-clip\": [\n                {\n                    \"bg-clip\": [\n                        \"border\",\n                        \"padding\",\n                        \"content\",\n                        \"text\"\n                    ]\n                }\n            ],\n            /**\r\n       * Background Opacity\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/background-opacity\r\n       */ \"bg-opacity\": [\n                {\n                    \"bg-opacity\": [\n                        opacity\n                    ]\n                }\n            ],\n            /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */ \"bg-origin\": [\n                {\n                    \"bg-origin\": [\n                        \"border\",\n                        \"padding\",\n                        \"content\"\n                    ]\n                }\n            ],\n            /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */ \"bg-position\": [\n                {\n                    bg: [].concat(getPositions(), [\n                        isArbitraryPosition\n                    ])\n                }\n            ],\n            /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */ \"bg-repeat\": [\n                {\n                    bg: [\n                        \"no-repeat\",\n                        {\n                            repeat: [\n                                \"\",\n                                \"x\",\n                                \"y\",\n                                \"round\",\n                                \"space\"\n                            ]\n                        }\n                    ]\n                }\n            ],\n            /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */ \"bg-size\": [\n                {\n                    bg: [\n                        \"auto\",\n                        \"cover\",\n                        \"contain\",\n                        isArbitrarySize\n                    ]\n                }\n            ],\n            /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */ \"bg-image\": [\n                {\n                    bg: [\n                        \"none\",\n                        {\n                            \"gradient-to\": [\n                                \"t\",\n                                \"tr\",\n                                \"r\",\n                                \"br\",\n                                \"b\",\n                                \"bl\",\n                                \"l\",\n                                \"tl\"\n                            ]\n                        },\n                        isArbitraryUrl\n                    ]\n                }\n            ],\n            /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */ \"bg-color\": [\n                {\n                    bg: [\n                        colors\n                    ]\n                }\n            ],\n            /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */ \"gradient-from\": [\n                {\n                    from: [\n                        gradientColorStops\n                    ]\n                }\n            ],\n            /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */ \"gradient-via\": [\n                {\n                    via: [\n                        gradientColorStops\n                    ]\n                }\n            ],\n            /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */ \"gradient-to\": [\n                {\n                    to: [\n                        gradientColorStops\n                    ]\n                }\n            ],\n            // Borders\n            /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */ rounded: [\n                {\n                    rounded: [\n                        borderRadius\n                    ]\n                }\n            ],\n            /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */ \"rounded-t\": [\n                {\n                    \"rounded-t\": [\n                        borderRadius\n                    ]\n                }\n            ],\n            /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */ \"rounded-r\": [\n                {\n                    \"rounded-r\": [\n                        borderRadius\n                    ]\n                }\n            ],\n            /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */ \"rounded-b\": [\n                {\n                    \"rounded-b\": [\n                        borderRadius\n                    ]\n                }\n            ],\n            /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */ \"rounded-l\": [\n                {\n                    \"rounded-l\": [\n                        borderRadius\n                    ]\n                }\n            ],\n            /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */ \"rounded-tl\": [\n                {\n                    \"rounded-tl\": [\n                        borderRadius\n                    ]\n                }\n            ],\n            /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */ \"rounded-tr\": [\n                {\n                    \"rounded-tr\": [\n                        borderRadius\n                    ]\n                }\n            ],\n            /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */ \"rounded-br\": [\n                {\n                    \"rounded-br\": [\n                        borderRadius\n                    ]\n                }\n            ],\n            /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */ \"rounded-bl\": [\n                {\n                    \"rounded-bl\": [\n                        borderRadius\n                    ]\n                }\n            ],\n            /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */ \"border-w\": [\n                {\n                    border: [\n                        borderWidth\n                    ]\n                }\n            ],\n            /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */ \"border-w-x\": [\n                {\n                    \"border-x\": [\n                        borderWidth\n                    ]\n                }\n            ],\n            /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */ \"border-w-y\": [\n                {\n                    \"border-y\": [\n                        borderWidth\n                    ]\n                }\n            ],\n            /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */ \"border-w-t\": [\n                {\n                    \"border-t\": [\n                        borderWidth\n                    ]\n                }\n            ],\n            /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */ \"border-w-r\": [\n                {\n                    \"border-r\": [\n                        borderWidth\n                    ]\n                }\n            ],\n            /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */ \"border-w-b\": [\n                {\n                    \"border-b\": [\n                        borderWidth\n                    ]\n                }\n            ],\n            /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */ \"border-w-l\": [\n                {\n                    \"border-l\": [\n                        borderWidth\n                    ]\n                }\n            ],\n            /**\r\n       * Border Opacity\r\n       * @see https://tailwindcss.com/docs/border-opacity\r\n       */ \"border-opacity\": [\n                {\n                    \"border-opacity\": [\n                        opacity\n                    ]\n                }\n            ],\n            /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */ \"border-style\": [\n                {\n                    border: [].concat(getLineStyles(), [\n                        \"hidden\"\n                    ])\n                }\n            ],\n            /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */ \"divide-x\": [\n                {\n                    \"divide-x\": [\n                        borderWidth\n                    ]\n                }\n            ],\n            /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */ \"divide-x-reverse\": [\n                \"divide-x-reverse\"\n            ],\n            /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */ \"divide-y\": [\n                {\n                    \"divide-y\": [\n                        borderWidth\n                    ]\n                }\n            ],\n            /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */ \"divide-y-reverse\": [\n                \"divide-y-reverse\"\n            ],\n            /**\r\n       * Divide Opacity\r\n       * @see https://tailwindcss.com/docs/divide-opacity\r\n       */ \"divide-opacity\": [\n                {\n                    \"divide-opacity\": [\n                        opacity\n                    ]\n                }\n            ],\n            /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/divide-style\r\n       */ \"divide-style\": [\n                {\n                    divide: getLineStyles()\n                }\n            ],\n            /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */ \"border-color\": [\n                {\n                    border: [\n                        borderColor\n                    ]\n                }\n            ],\n            /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */ \"border-color-x\": [\n                {\n                    \"border-x\": [\n                        borderColor\n                    ]\n                }\n            ],\n            /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */ \"border-color-y\": [\n                {\n                    \"border-y\": [\n                        borderColor\n                    ]\n                }\n            ],\n            /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */ \"border-color-t\": [\n                {\n                    \"border-t\": [\n                        borderColor\n                    ]\n                }\n            ],\n            /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */ \"border-color-r\": [\n                {\n                    \"border-r\": [\n                        borderColor\n                    ]\n                }\n            ],\n            /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */ \"border-color-b\": [\n                {\n                    \"border-b\": [\n                        borderColor\n                    ]\n                }\n            ],\n            /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */ \"border-color-l\": [\n                {\n                    \"border-l\": [\n                        borderColor\n                    ]\n                }\n            ],\n            /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */ \"divide-color\": [\n                {\n                    divide: [\n                        borderColor\n                    ]\n                }\n            ],\n            /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */ \"outline-style\": [\n                {\n                    outline: [\n                        \"\"\n                    ].concat(getLineStyles())\n                }\n            ],\n            /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */ \"outline-offset\": [\n                {\n                    \"outline-offset\": [\n                        isLength\n                    ]\n                }\n            ],\n            /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */ \"outline-w\": [\n                {\n                    outline: [\n                        isLength\n                    ]\n                }\n            ],\n            /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */ \"outline-color\": [\n                {\n                    outline: [\n                        colors\n                    ]\n                }\n            ],\n            /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */ \"ring-w\": [\n                {\n                    ring: getLengthWithEmpty()\n                }\n            ],\n            /**\r\n       * Ring Width Inset\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */ \"ring-w-inset\": [\n                \"ring-inset\"\n            ],\n            /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/ring-color\r\n       */ \"ring-color\": [\n                {\n                    ring: [\n                        colors\n                    ]\n                }\n            ],\n            /**\r\n       * Ring Opacity\r\n       * @see https://tailwindcss.com/docs/ring-opacity\r\n       */ \"ring-opacity\": [\n                {\n                    \"ring-opacity\": [\n                        opacity\n                    ]\n                }\n            ],\n            /**\r\n       * Ring Offset Width\r\n       * @see https://tailwindcss.com/docs/ring-offset-width\r\n       */ \"ring-offset-w\": [\n                {\n                    \"ring-offset\": [\n                        isLength\n                    ]\n                }\n            ],\n            /**\r\n       * Ring Offset Color\r\n       * @see https://tailwindcss.com/docs/ring-offset-color\r\n       */ \"ring-offset-color\": [\n                {\n                    \"ring-offset\": [\n                        colors\n                    ]\n                }\n            ],\n            // Effects\n            /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */ shadow: [\n                {\n                    shadow: [\n                        \"\",\n                        \"inner\",\n                        \"none\",\n                        isTshirtSize,\n                        isArbitraryShadow\n                    ]\n                }\n            ],\n            /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow-color\r\n       */ \"shadow-color\": [\n                {\n                    shadow: [\n                        isAny\n                    ]\n                }\n            ],\n            /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */ opacity: [\n                {\n                    opacity: [\n                        opacity\n                    ]\n                }\n            ],\n            /**\r\n       * Mix Beldn Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */ \"mix-blend\": [\n                {\n                    \"mix-blend\": getBlendModes()\n                }\n            ],\n            /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */ \"bg-blend\": [\n                {\n                    \"bg-blend\": getBlendModes()\n                }\n            ],\n            // Filters\n            /**\r\n       * Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */ filter: [\n                {\n                    filter: [\n                        \"\",\n                        \"none\"\n                    ]\n                }\n            ],\n            /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */ blur: [\n                {\n                    blur: [\n                        blur\n                    ]\n                }\n            ],\n            /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */ brightness: [\n                {\n                    brightness: [\n                        brightness\n                    ]\n                }\n            ],\n            /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */ contrast: [\n                {\n                    contrast: [\n                        contrast\n                    ]\n                }\n            ],\n            /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */ \"drop-shadow\": [\n                {\n                    \"drop-shadow\": [\n                        \"\",\n                        \"none\",\n                        isTshirtSize,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */ grayscale: [\n                {\n                    grayscale: [\n                        grayscale\n                    ]\n                }\n            ],\n            /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */ \"hue-rotate\": [\n                {\n                    \"hue-rotate\": [\n                        hueRotate\n                    ]\n                }\n            ],\n            /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */ invert: [\n                {\n                    invert: [\n                        invert\n                    ]\n                }\n            ],\n            /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */ saturate: [\n                {\n                    saturate: [\n                        saturate\n                    ]\n                }\n            ],\n            /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */ sepia: [\n                {\n                    sepia: [\n                        sepia\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */ \"backdrop-filter\": [\n                {\n                    \"backdrop-filter\": [\n                        \"\",\n                        \"none\"\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */ \"backdrop-blur\": [\n                {\n                    \"backdrop-blur\": [\n                        blur\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */ \"backdrop-brightness\": [\n                {\n                    \"backdrop-brightness\": [\n                        brightness\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */ \"backdrop-contrast\": [\n                {\n                    \"backdrop-contrast\": [\n                        contrast\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */ \"backdrop-grayscale\": [\n                {\n                    \"backdrop-grayscale\": [\n                        grayscale\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */ \"backdrop-hue-rotate\": [\n                {\n                    \"backdrop-hue-rotate\": [\n                        hueRotate\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */ \"backdrop-invert\": [\n                {\n                    \"backdrop-invert\": [\n                        invert\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */ \"backdrop-opacity\": [\n                {\n                    \"backdrop-opacity\": [\n                        opacity\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */ \"backdrop-saturate\": [\n                {\n                    \"backdrop-saturate\": [\n                        saturate\n                    ]\n                }\n            ],\n            /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */ \"backdrop-sepia\": [\n                {\n                    \"backdrop-sepia\": [\n                        sepia\n                    ]\n                }\n            ],\n            // Tables\n            /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */ \"border-collapse\": [\n                {\n                    border: [\n                        \"collapse\",\n                        \"separate\"\n                    ]\n                }\n            ],\n            /**\r\n       * Border Spacing\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */ \"border-spacing\": [\n                {\n                    \"border-spacing\": [\n                        borderSpacing\n                    ]\n                }\n            ],\n            /**\r\n       * Border Spacing X\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */ \"border-spacing-x\": [\n                {\n                    \"border-spacing-x\": [\n                        borderSpacing\n                    ]\n                }\n            ],\n            /**\r\n       * Border Spacing Y\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */ \"border-spacing-y\": [\n                {\n                    \"border-spacing-y\": [\n                        borderSpacing\n                    ]\n                }\n            ],\n            /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */ \"table-layout\": [\n                {\n                    table: [\n                        \"auto\",\n                        \"fixed\"\n                    ]\n                }\n            ],\n            // Transitions and Animation\n            /**\r\n       * Tranisition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */ transition: [\n                {\n                    transition: [\n                        \"none\",\n                        \"all\",\n                        \"\",\n                        \"colors\",\n                        \"opacity\",\n                        \"shadow\",\n                        \"transform\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */ duration: [\n                {\n                    duration: [\n                        isInteger\n                    ]\n                }\n            ],\n            /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */ ease: [\n                {\n                    ease: [\n                        \"linear\",\n                        \"in\",\n                        \"out\",\n                        \"in-out\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */ delay: [\n                {\n                    delay: [\n                        isInteger\n                    ]\n                }\n            ],\n            /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */ animate: [\n                {\n                    animate: [\n                        \"none\",\n                        \"spin\",\n                        \"ping\",\n                        \"pulse\",\n                        \"bounce\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // Transforms\n            /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */ transform: [\n                {\n                    transform: [\n                        \"\",\n                        \"gpu\",\n                        \"none\"\n                    ]\n                }\n            ],\n            /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */ scale: [\n                {\n                    scale: [\n                        scale\n                    ]\n                }\n            ],\n            /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */ \"scale-x\": [\n                {\n                    \"scale-x\": [\n                        scale\n                    ]\n                }\n            ],\n            /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */ \"scale-y\": [\n                {\n                    \"scale-y\": [\n                        scale\n                    ]\n                }\n            ],\n            /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */ rotate: [\n                {\n                    rotate: [\n                        isInteger,\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */ \"translate-x\": [\n                {\n                    \"translate-x\": [\n                        translate\n                    ]\n                }\n            ],\n            /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */ \"translate-y\": [\n                {\n                    \"translate-y\": [\n                        translate\n                    ]\n                }\n            ],\n            /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */ \"skew-x\": [\n                {\n                    \"skew-x\": [\n                        skew\n                    ]\n                }\n            ],\n            /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */ \"skew-y\": [\n                {\n                    \"skew-y\": [\n                        skew\n                    ]\n                }\n            ],\n            /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */ \"transform-origin\": [\n                {\n                    origin: [\n                        \"center\",\n                        \"top\",\n                        \"top-right\",\n                        \"right\",\n                        \"bottom-right\",\n                        \"bottom\",\n                        \"bottom-left\",\n                        \"left\",\n                        \"top-left\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // Interactivity\n            /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */ accent: [\n                {\n                    accent: [\n                        \"auto\",\n                        colors\n                    ]\n                }\n            ],\n            /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */ appearance: [\n                \"appearance-none\"\n            ],\n            /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */ cursor: [\n                {\n                    cursor: [\n                        \"auto\",\n                        \"default\",\n                        \"pointer\",\n                        \"wait\",\n                        \"text\",\n                        \"move\",\n                        \"help\",\n                        \"not-allowed\",\n                        \"none\",\n                        \"context-menu\",\n                        \"progress\",\n                        \"cell\",\n                        \"crosshair\",\n                        \"vertical-text\",\n                        \"alias\",\n                        \"copy\",\n                        \"no-drop\",\n                        \"grab\",\n                        \"grabbing\",\n                        \"all-scroll\",\n                        \"col-resize\",\n                        \"row-resize\",\n                        \"n-resize\",\n                        \"e-resize\",\n                        \"s-resize\",\n                        \"w-resize\",\n                        \"ne-resize\",\n                        \"nw-resize\",\n                        \"se-resize\",\n                        \"sw-resize\",\n                        \"ew-resize\",\n                        \"ns-resize\",\n                        \"nesw-resize\",\n                        \"nwse-resize\",\n                        \"zoom-in\",\n                        \"zoom-out\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */ \"caret-color\": [\n                {\n                    caret: [\n                        colors\n                    ]\n                }\n            ],\n            /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */ \"pointer-events\": [\n                {\n                    \"pointer-events\": [\n                        \"none\",\n                        \"auto\"\n                    ]\n                }\n            ],\n            /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */ resize: [\n                {\n                    resize: [\n                        \"none\",\n                        \"y\",\n                        \"x\",\n                        \"\"\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */ \"scroll-behavior\": [\n                {\n                    scroll: [\n                        \"auto\",\n                        \"smooth\"\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */ \"scroll-m\": [\n                {\n                    \"scroll-m\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */ \"scroll-mx\": [\n                {\n                    \"scroll-mx\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */ \"scroll-my\": [\n                {\n                    \"scroll-my\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */ \"scroll-mt\": [\n                {\n                    \"scroll-mt\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */ \"scroll-mr\": [\n                {\n                    \"scroll-mr\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */ \"scroll-mb\": [\n                {\n                    \"scroll-mb\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */ \"scroll-ml\": [\n                {\n                    \"scroll-ml\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */ \"scroll-p\": [\n                {\n                    \"scroll-p\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */ \"scroll-px\": [\n                {\n                    \"scroll-px\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */ \"scroll-py\": [\n                {\n                    \"scroll-py\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */ \"scroll-pt\": [\n                {\n                    \"scroll-pt\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */ \"scroll-pr\": [\n                {\n                    \"scroll-pr\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */ \"scroll-pb\": [\n                {\n                    \"scroll-pb\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */ \"scroll-pl\": [\n                {\n                    \"scroll-pl\": [\n                        spacing\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */ \"snap-align\": [\n                {\n                    snap: [\n                        \"start\",\n                        \"end\",\n                        \"center\",\n                        \"align-none\"\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */ \"snap-stop\": [\n                {\n                    snap: [\n                        \"normal\",\n                        \"always\"\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */ \"snap-type\": [\n                {\n                    snap: [\n                        \"none\",\n                        \"x\",\n                        \"y\",\n                        \"both\"\n                    ]\n                }\n            ],\n            /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */ \"snap-strictness\": [\n                {\n                    snap: [\n                        \"mandatory\",\n                        \"proximity\"\n                    ]\n                }\n            ],\n            /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */ touch: [\n                {\n                    touch: [\n                        \"auto\",\n                        \"none\",\n                        \"pinch-zoom\",\n                        \"manipulation\",\n                        {\n                            pan: [\n                                \"x\",\n                                \"left\",\n                                \"right\",\n                                \"y\",\n                                \"up\",\n                                \"down\"\n                            ]\n                        }\n                    ]\n                }\n            ],\n            /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */ select: [\n                {\n                    select: [\n                        \"none\",\n                        \"text\",\n                        \"all\",\n                        \"auto\"\n                    ]\n                }\n            ],\n            /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */ \"will-change\": [\n                {\n                    \"will-change\": [\n                        \"auto\",\n                        \"scroll\",\n                        \"contents\",\n                        \"transform\",\n                        isArbitraryValue\n                    ]\n                }\n            ],\n            // SVG\n            /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */ fill: [\n                {\n                    fill: [\n                        colors,\n                        \"none\"\n                    ]\n                }\n            ],\n            /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */ \"stroke-w\": [\n                {\n                    stroke: [\n                        isLength,\n                        isArbitraryNumber\n                    ]\n                }\n            ],\n            /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */ stroke: [\n                {\n                    stroke: [\n                        colors,\n                        \"none\"\n                    ]\n                }\n            ],\n            // Accessibility\n            /**\r\n       * Screen Readers\r\n       * @see https://tailwindcss.com/docs/screen-readers\r\n       */ sr: [\n                \"sr-only\",\n                \"not-sr-only\"\n            ]\n        },\n        conflictingClassGroups: {\n            overflow: [\n                \"overflow-x\",\n                \"overflow-y\"\n            ],\n            overscroll: [\n                \"overscroll-x\",\n                \"overscroll-y\"\n            ],\n            inset: [\n                \"inset-x\",\n                \"inset-y\",\n                \"top\",\n                \"right\",\n                \"bottom\",\n                \"left\"\n            ],\n            \"inset-x\": [\n                \"right\",\n                \"left\"\n            ],\n            \"inset-y\": [\n                \"top\",\n                \"bottom\"\n            ],\n            flex: [\n                \"basis\",\n                \"grow\",\n                \"shrink\"\n            ],\n            gap: [\n                \"gap-x\",\n                \"gap-y\"\n            ],\n            p: [\n                \"px\",\n                \"py\",\n                \"pt\",\n                \"pr\",\n                \"pb\",\n                \"pl\"\n            ],\n            px: [\n                \"pr\",\n                \"pl\"\n            ],\n            py: [\n                \"pt\",\n                \"pb\"\n            ],\n            m: [\n                \"mx\",\n                \"my\",\n                \"mt\",\n                \"mr\",\n                \"mb\",\n                \"ml\"\n            ],\n            mx: [\n                \"mr\",\n                \"ml\"\n            ],\n            my: [\n                \"mt\",\n                \"mb\"\n            ],\n            \"font-size\": [\n                \"leading\"\n            ],\n            \"fvn-normal\": [\n                \"fvn-ordinal\",\n                \"fvn-slashed-zero\",\n                \"fvn-figure\",\n                \"fvn-spacing\",\n                \"fvn-fraction\"\n            ],\n            \"fvn-ordinal\": [\n                \"fvn-normal\"\n            ],\n            \"fvn-slashed-zero\": [\n                \"fvn-normal\"\n            ],\n            \"fvn-figure\": [\n                \"fvn-normal\"\n            ],\n            \"fvn-spacing\": [\n                \"fvn-normal\"\n            ],\n            \"fvn-fraction\": [\n                \"fvn-normal\"\n            ],\n            rounded: [\n                \"rounded-t\",\n                \"rounded-r\",\n                \"rounded-b\",\n                \"rounded-l\",\n                \"rounded-tl\",\n                \"rounded-tr\",\n                \"rounded-br\",\n                \"rounded-bl\"\n            ],\n            \"rounded-t\": [\n                \"rounded-tl\",\n                \"rounded-tr\"\n            ],\n            \"rounded-r\": [\n                \"rounded-tr\",\n                \"rounded-br\"\n            ],\n            \"rounded-b\": [\n                \"rounded-br\",\n                \"rounded-bl\"\n            ],\n            \"rounded-l\": [\n                \"rounded-tl\",\n                \"rounded-bl\"\n            ],\n            \"border-spacing\": [\n                \"border-spacing-x\",\n                \"border-spacing-y\"\n            ],\n            \"border-w\": [\n                \"border-w-t\",\n                \"border-w-r\",\n                \"border-w-b\",\n                \"border-w-l\"\n            ],\n            \"border-w-x\": [\n                \"border-w-r\",\n                \"border-w-l\"\n            ],\n            \"border-w-y\": [\n                \"border-w-t\",\n                \"border-w-b\"\n            ],\n            \"border-color\": [\n                \"border-color-t\",\n                \"border-color-r\",\n                \"border-color-b\",\n                \"border-color-l\"\n            ],\n            \"border-color-x\": [\n                \"border-color-r\",\n                \"border-color-l\"\n            ],\n            \"border-color-y\": [\n                \"border-color-t\",\n                \"border-color-b\"\n            ],\n            \"scroll-m\": [\n                \"scroll-mx\",\n                \"scroll-my\",\n                \"scroll-mt\",\n                \"scroll-mr\",\n                \"scroll-mb\",\n                \"scroll-ml\"\n            ],\n            \"scroll-mx\": [\n                \"scroll-mr\",\n                \"scroll-ml\"\n            ],\n            \"scroll-my\": [\n                \"scroll-mt\",\n                \"scroll-mb\"\n            ],\n            \"scroll-p\": [\n                \"scroll-px\",\n                \"scroll-py\",\n                \"scroll-pt\",\n                \"scroll-pr\",\n                \"scroll-pb\",\n                \"scroll-pl\"\n            ],\n            \"scroll-px\": [\n                \"scroll-pr\",\n                \"scroll-pl\"\n            ],\n            \"scroll-py\": [\n                \"scroll-pt\",\n                \"scroll-pb\"\n            ]\n        }\n    };\n}\nvar twMerge = /*#__PURE__*/ createTailwindMerge(getDefaultConfig);\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */ function mergeConfigs(baseConfig, configExtension) {\n    for(var key in configExtension){\n        mergePropertyRecursively(baseConfig, key, configExtension[key]);\n    }\n    return baseConfig;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar overrideTypes = /*#__PURE__*/ new Set([\n    \"string\",\n    \"number\",\n    \"boolean\"\n]);\nfunction mergePropertyRecursively(baseObject, mergeKey, mergeValue) {\n    if (!hasOwnProperty.call(baseObject, mergeKey) || overrideTypes.has(typeof mergeValue) || mergeValue === null) {\n        baseObject[mergeKey] = mergeValue;\n        return;\n    }\n    if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n        baseObject[mergeKey] = baseObject[mergeKey].concat(mergeValue);\n        return;\n    }\n    if (typeof mergeValue === \"object\" && typeof baseObject[mergeKey] === \"object\") {\n        if (baseObject[mergeKey] === null) {\n            baseObject[mergeKey] = mergeValue;\n            return;\n        }\n        for(var nextKey in mergeValue){\n            mergePropertyRecursively(baseObject[mergeKey], nextKey, mergeValue[nextKey]);\n        }\n    }\n}\nfunction extendTailwindMerge(configExtension) {\n    for(var _len = arguments.length, createConfig = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        createConfig[_key - 1] = arguments[_key];\n    }\n    return typeof configExtension === \"function\" ? createTailwindMerge.apply(void 0, [\n        getDefaultConfig,\n        configExtension\n    ].concat(createConfig)) : createTailwindMerge.apply(void 0, [\n        function() {\n            return mergeConfigs(getDefaultConfig(), configExtension);\n        }\n    ].concat(createConfig));\n}\n/**\r\n * @deprecated Will be removed in next major version. Use `twJoin` instead.\r\n */ var join = twJoin;\nexports.createTailwindMerge = createTailwindMerge;\nexports.extendTailwindMerge = extendTailwindMerge;\nexports.fromTheme = fromTheme;\nexports.getDefaultConfig = getDefaultConfig;\nexports.join = join;\nexports.mergeConfigs = mergeConfigs;\nexports.twJoin = twJoin;\nexports.twMerge = twMerge;\nexports.validators = validators; //# sourceMappingURL=tailwind-merge.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/tailwind-merge@1.8.1/node_modules/tailwind-merge/dist/tailwind-merge.cjs.development.js\n");

/***/ })

};
;